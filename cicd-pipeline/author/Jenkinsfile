pipeline {
    agent any

    tools {
        jdk 'jdk17'
    }

    environment {
        DOCKER_REGISTRY_CREDENTIALS = credentials('docker-hub-credentials')
        AUTHOR_IMAGE = "choijaehun/authors"
        IMAGE_TAG = "1.4"
        MYSQL_HOST = '172.17.0.3'
        MYSQL_PORT = '3306'
        MYSQL_DATABASE = 'cicd_project'
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'ssh-key', url: 'https://github.com/choejaehun/cicd-project.git', branch: 'main'
            }
        }

        stage('Set Permissions') {
            steps {
                sh 'chmod +x ./cicd-pipeline/author/gradlew'
            }
        }

        stage('Build Author') {
            steps {
                script {
                    echo "Author 프로젝트 빌드 실행:"
                    sh "./cicd-pipeline/author/gradlew -p ./cicd-pipeline/author clean build -x test -Dspring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE} -Dspring.datasource.username=root -Dspring.datasource.password=P@ssw0rd"
                }
            }
        }

        stage('Docker Build and Push Authors') {
            steps {
                script {
                    def imageName = "${AUTHOR_IMAGE}:${IMAGE_TAG}"
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                        def app = docker.build(imageName, './cicd-pipeline/author')
                        app.push("${IMAGE_TAG}")
                    }
                    sh "docker rmi ${imageName} || true" // 푸시 후 로컬에서 이미지 삭제
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}

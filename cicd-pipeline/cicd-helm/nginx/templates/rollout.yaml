{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    canary:
      steps:
        - setWeight: 20
        - pause: { duration: 15s }
        - setWeight: 50
        - pause: { duration: 15s }
        - setWeight: 100
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" ( include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) ) "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" ( include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) ) "context" $ ) | nindent 8 }}
      annotations:
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.metrics.enabled .Values.metrics.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "nginx.imagePullSecrets" . | nindent 6 }}
      shareProcessNamespace: {{ .Values.sidecarSingleProcessNamespace }}
      serviceAccountName: {{ template "nginx.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      affinity:
        {{- if .Values.affinity }}
        {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
        {{- else }}
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "customLabels" ( include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) ) "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "customLabels" ( include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) ) "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
        {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      tolerations:
        {{- if .Values.tolerations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: nginx
          image: {{ include "nginx.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.image.debug | quote }}
            {{- if .Values.containerPorts.http }}
            - name: NGINX_HTTP_PORT_NUMBER
              value: {{ .Values.containerPorts.http | quote }}
            {{- end }}
            {{- if .Values.containerPorts.https }}
            - name: NGINX_HTTPS_PORT_NUMBER
              value: {{ .Values.containerPorts.https | quote }}
            {{- end }}
          ports:
            {{- if .Values.containerPorts.http }}
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
            {{- end }}
            {{- if .Values.containerPorts.https }}
            - name: https
              containerPort: {{ .Values.containerPorts.https }}
            {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/nginx/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/nginx/logs
              subPath: app-logs-dir
            - name: empty-dir
              mountPath: /opt/bitnami/nginx/tmp
              subPath: app-tmp-dir
            {{- if or .Values.serverBlock .Values.existingServerBlockConfigmap }}
            - name: nginx-server-block
              mountPath: /opt/bitnami/nginx/conf/server_blocks
            {{- end }}
            {{- if or .Values.streamServerBlock .Values.existingStreamServerBlockConfigmap }}
            - name: nginx-stream-server-block
              mountPath: /opt/bitnami/nginx/conf/stream_server_blocks
            {{- end }}
            {{- if (include "nginx.useStaticSite" .) }}
            - name: staticsite
              mountPath: /app
            {{- end }}
            {{- if .Values.tls.enabled }}
            - name: certificate
              mountPath: /certs
            {{- else }}
            - name: empty-dir
              mountPath: /certs
              subPath: app-tls-dir
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        {{- if .Values.tls.enabled }}
        - name: certificate
          secret:
            {{- if .Values.tls.existingSecret }}
            secretName: {{ .Values.tls.existingSecret }}
            {{- else }}
            secretName: {{ printf "%s-tls" (include "common.names.fullname" .) }}
            items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
            {{- end }}
        {{- end }}
        {{- if or .Values.serverBlock .Values.existingServerBlockConfigmap }}
        - name: nginx-server-block
          configMap:
            name: {{ include "nginx.serverBlockConfigmapName" . }}
        {{- end }}
        {{- if or .Values.streamServerBlock .Values.existingStreamServerBlockConfigmap }}
        - name: nginx-stream-server-block
          configMap:
            name: {{ include "nginx.streamServerBlockConfigmapName" . }}
        {{- end }}
        {{- if (include "nginx.useStaticSite" .) }}
        - name: staticsite
          {{- include "nginx.staticSiteVolume" . | nindent 10 }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
